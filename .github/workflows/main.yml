name: Terraform CI/CD Pipeline

on:
  push:
    paths:
      - '.'

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bash curl wget unzip openssh-client

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.9.4/terraform_1.9.4_linux_amd64.zip
          unzip terraform_1.9.4_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

  init:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize Terraform
        run: |
          source /venv/bin/activate
          terraform init -reconfigure
        env:
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}

  plan:
    runs-on: ubuntu-latest
    needs: init

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Plan
        run: |
          terraform init -reconfigure 
          terraform plan -out=tfplan -input=false
        env:
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}

  apply:
    runs-on: ubuntu-latest
    needs: plan

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Apply
        run: |
          terraform init -reconfigure 
          terraform apply -input=false tfplan
        env:
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}

  destroy:
    runs-on: ubuntu-latest
    needs: apply

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform Destroy
        run: |
          terraform init -reconfigure 
          terraform destroy -auto-approve
        env:
          TF_VAR_api_token: ${{ secrets.API_TOKEN }}
